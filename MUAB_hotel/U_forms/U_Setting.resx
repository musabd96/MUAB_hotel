<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bP4GSvT83kp3SZMAAAAASUVORK5CYII=
</value>
  </data>
</root>