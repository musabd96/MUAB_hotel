<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbReload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnARURGyL8gEy+AAAFZUlEQVR4Xu2ba8wcUxjH395QtA2q
        6tJQl6i6RGkJ4hIJQSSioR+QVkIiIeqDa78gTagvNBIhSiJEEIkW7QeXfpIIcVdxqYQScSslQdxZv/+Z
        Z3Znzntm+77vzsyeee0v+SW7c54555ndndkz55wZGjBgQOW0Wq0ZeCAegcfY671wsoWMHziouXgpPoSv
        4Y9YxJ/4ET6DK/AEbN6HQtJz8CZ8D3vlB1yDp+IEayJOSPBIfAT/wirQB7oU4/pVkNC++AT+i3XwMZ5l
        zfcPkpiA1+DP2I3f8SW8HS/B41EXvlm4Gx6A8/E8vA6fxG9xe6zFWZZOvdDwTNygLArQaaCL2RKcaruN
        CvZbiKvxGyziKzzddqkHGjwMP1frAX7De3CuhfcMde2IV+AnGOJvXG7h1UJDi3CrWg2wEedZaOlQ9xTs
        dsrdjdX9U1D5sfiTWvJQQkstrHJo62B8Qw0HuM3CyoWK1WjowrQZD7Ww2qBNnRb3K4EAl1lYOVDhNNSB
        +ryO/bkKG7R/i8skj3qUZ1hI71DZo67aPG/jDAvpK+Rxq8soj7rc+1jI2KGSi111eXQ1nm0hfYdc1B8J
        fUlrLWRsUMF0/NpV1UGdmqMtJBrISdcEdbZ8FlvI6GHnu5I6clxtxdFBbvvjLy7LDuoo7WIhQSg/HOfY
        2wQ2zEZ921lewajvyMhPXWmf4JfG9om4zkW0Wv9gJ443q9zmDgpYaMXRQo6T8R0lnEHXrEkW0oZt/oe1
        NS3YCf2Bi3WusAGQ6+Ik5RxLrNjBe/3s1W3PsjktvCB5n+NEVxgB5KJxhxfwOTzZNrdh2yT8DLNstGKV
        q0sd6klemAY8lbxvs8kVRAC56Lz9wmWVoFPzTszdcfL+BhVm+AOnW1mo3/BYuqM+Hf9mY4UrjABy0cU5
        xAe4yMIUp0FWf4BGp4buZ9RTzPIl7p7uqMEKn8ru8MYC+aRXbh+NQazEKRa3SRszqLP0fvKyjT6kc1zF
        gjfXus0dNBgR1V8f+egirZ+9fv4h3kQNuWswZXussWoT2PBgsr1NtFd/cjsFP3VZDkd9mOeTl4Vo32lW
        XQIb/O7kKiuKEvLbGTUQMtoBWf16TrNqOrDR//u43IqihjzPRl3MRspq2zUPBduS8jZjv5moGXLVlFvR
        IEmWDzE8UEuB/i+znGlFjYGc1ZH7zmU/HP1THGehw6Gw8R+AIG/NOWjewGelhYQhoLGnQAjy18Ts96iL
        5OPo+giFENDIi2A3OIYdcA972x0CG/U3WDoccGM6QpXAAUffFa4UDjb6m6FK4WA1pORPf0VzO1wLHHC0
        AyK1wAFHPSRWORzsVPQHRZ+24v8HHHAjh8VLg4PVmNqvOvIMmg2eaCHjHw5Ww04+0U6NlQ4Hq3UBmlvL
        oqGmBRYy/uFgtazNJ6rp8crhYENz72+hm2joN+RxLj6My3HYHGDPUKlOBa3O9NHi534vkbnZZdLhRisq
        Fyo+BEPL4/TB1H6vQJtaEPGAEvBYbyHlQ+VaIxhao6dtyyyscmhLX4YmP0JcZWHVQAPdFkq+iPMttHSo
        WyM7/VsomUIjWirrD52laFD1XjzIwnuGutQ1vxK3YAj1UutZKptCg1osvV6tF6D1u8/iRbir7TZi2Ecr
        v/TEiL7Vol+c0GRIvYulU2hYSeqvJ7R8Noumo1/GO3AZnoTpc0JaLq/Hao7C81Hz+hrOLhrXz6Lb9j0t
        nf5BEnujnhSp84GJzpR2LJBU+siMvwChLN7F+B6Z8SHB/VA/ZS2n7RVNatyHmgpv3uAsSWvxor41dVpe
        RX/mKYtutDRxqWvA9agB2nH5LKG61ulzQgswfX6o/H78gAEDRs7Q0H+W6s4Xx72sxAAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>